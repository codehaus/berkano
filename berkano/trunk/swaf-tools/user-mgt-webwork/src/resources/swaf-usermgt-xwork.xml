<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE xwork PUBLIC "-//OpenSymphony Group//XWork 1.0//EN" "http://www.opensymphony.com/xwork/xwork-1.0.dtd">

<xwork>
    <package name="swaf-abstract" extends="webwork-default" abstract="true">
        <interceptors>
            <interceptor-stack name="swafUserMgtStack">
                <!--<interceptor-ref name="chain"/>-->
                <interceptor-ref name="defaultStack"/>
                <interceptor-ref name="validation"/>
                <interceptor-ref name="workflow"/>
            </interceptor-stack>
            <interceptor name="swafPrefs" class="net.incongru.swaf.profile.PreferencesInterceptor"/>
            <interceptor-stack name="swafPrefsStack">
                <interceptor-ref name="servlet-config"/>
                <interceptor-ref name="prepare"/>
                <interceptor-ref name="swafPrefs"/>
                <interceptor-ref name="model-driven"/>
                <interceptor-ref name="static-params"/>
                <interceptor-ref name="params"/>
                <interceptor-ref name="conversionError"/>
            </interceptor-stack>
        </interceptors>
        <default-interceptor-ref name="swafUserMgtStack"/>
    </package>

    <package name="manager" extends="swaf-abstract" namespace="/manager">
        <action name="default" class="com.opensymphony.xwork.ActionSupport">
            <result name="success" type="velocity">
                <param name="location">/swaf/usermgt/default.vm</param>
            </result>
        </action>

        <action name="group.list" class="net.incongru.swaf.usermgt.webwork.GroupListAction">
            <result name="success" type="velocity">/swaf/usermgt/groups_list.vm</result>
        </action>
        <action name="group.add" class="net.incongru.swaf.usermgt.webwork.GroupAddAction">
            <result name="input" type="chain">group.list</result>
            <result name="success" type="chain">group.list</result>
        </action>
        <action name="group.remove" class="net.incongru.swaf.usermgt.webwork.GroupRemoveAction">
            <result name="success" type="chain">group.list</result>
        </action>

        <action name="group.view" class="net.incongru.swaf.usermgt.webwork.GroupViewAction">
            <result name="success" type="velocity">/swaf/usermgt/group_details.vm</result>
        </action>
        <action name="group.roles" class="net.incongru.swaf.usermgt.webwork.GroupRolesAction">
            <result name="success" type="chain">group.view</result>
        </action>
        <action name="group.addproperty" class="net.incongru.swaf.usermgt.webwork.GroupPropertyAction" method="addProperty">
            <result name="success" type="chain">group.view</result>
        </action>
        <action name="group.delproperty" class="net.incongru.swaf.usermgt.webwork.GroupPropertyAction" method="removeProperty">
            <result name="success" type="chain">group.view</result>
        </action>

        <action name="user.list" class="net.incongru.swaf.usermgt.webwork.UserListAction">
            <result name="success" type="velocity">/swaf/usermgt/users_list.vm</result>
        </action>

        <action name="user.new" class="com.opensymphony.xwork.ActionSupport">
            <result name="success" type="velocity">/swaf/usermgt/user_edit.vm</result>
        </action>

        <action name="user.edit" class="net.incongru.swaf.usermgt.webwork.UserViewAction">
            <result name="success" type="velocity">/swaf/usermgt/user_edit.vm</result>
        </action>

        <action name="user.save" class="net.incongru.swaf.usermgt.webwork.UserSaveAction">
            <result name="input" type="velocity">/swaf/usermgt/user_edit.vm</result>
            <result name="success" type="chain">user.list</result>
        </action>

        <action name="user.remove" class="net.incongru.swaf.usermgt.webwork.UserRemoveAction">
            <result name="success" type="chain">user.list</result>
        </action>

        <action name="user.view" class="net.incongru.swaf.usermgt.webwork.UserViewAction">
            <result name="success" type="velocity">/swaf/usermgt/user_details.vm</result>
        </action>

        <action name="user.addproperty" class="net.incongru.swaf.usermgt.webwork.UserPropertyAction" method="addProperty">
            <result name="success" type="chain">user.view</result>
        </action>

        <action name="user.delproperty" class="net.incongru.swaf.usermgt.webwork.UserPropertyAction" method="removeProperty">
            <result name="success" type="chain">user.view</result>
        </action>

        <action name="usergroups.view" class="net.incongru.swaf.usermgt.webwork.UserGroupsViewAction">
            <result name="success" type="velocity">/swaf/usermgt/user_groups_edit.vm</result>
        </action>

        <action name="usergroups.edit" class="net.incongru.swaf.usermgt.webwork.UserGroupsEditAction">
            <result name="success" type="chain">usergroups.view</result>
        </action>
    </package>

    <package name="lostpassword" extends="swaf-abstract" namespace="/lostpassword">
        <action name="form" class="net.incongru.swaf.usermgt.webwork.lostpw.FormAction">
            <result name="username" type="velocity">/swaf/lostpw/form_username.vm</result>
            <result name="email" type="velocity">/swaf/lostpw/form_email.vm</result>
        </action>
        <action name="retrieve" class="net.incongru.swaf.usermgt.webwork.lostpw.RetrieveAction">
            <!-- this should also depend on the action: should either display pw on screen
                 or say a mail was sent, or whatever -->
            <result name="success" type="velocity">/swaf/lostpw/done_email_with_password.vm</result>
        </action>
    </package>

    <package name="profile" extends="swaf-abstract" namespace="/profile">
        <default-interceptor-ref name="swafPrefsStack"/>
        <action name="preferences" class="net.incongru.swaf.profile.PreferencesListAction">
            <result name="success" type="velocity">/swaf/profile/preferences.vm</result>
        </action>
        <action name="preferences.save" class="net.incongru.swaf.profile.PreferencesSaveAction">
            <result name="success" type="chain">preferences</result>
        </action>
    </package>
</xwork>